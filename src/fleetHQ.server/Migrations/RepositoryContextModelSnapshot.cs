// <auto-generated />
using System;
using FleetHQ.Server.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace fleetHQ.server.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FleetHQ.Server.Repository.Models.FeatureModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Features");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aa23c9d9-0746-471c-8da8-263f0a341e72"),
                            Name = "Vehicles"
                        },
                        new
                        {
                            Id = new Guid("d87de7a2-7ed4-499c-8b66-ae4e3629f204"),
                            Name = "Drivers"
                        },
                        new
                        {
                            Id = new Guid("4afce292-b17f-48ed-9040-501f9be58923"),
                            Name = "Bookings"
                        },
                        new
                        {
                            Id = new Guid("5dce7c3f-2505-466c-b437-e28358396776"),
                            Name = "Settings"
                        },
                        new
                        {
                            Id = new Guid("b1e15af5-5008-4831-a8d7-259c675323db"),
                            Name = "Expenses"
                        },
                        new
                        {
                            Id = new Guid("0a589561-ee5c-40a7-ab94-3afa8fd12bf7"),
                            Name = "FuelUsage"
                        },
                        new
                        {
                            Id = new Guid("984661cc-279e-4ba5-8247-c699e8668810"),
                            Name = "Documents"
                        },
                        new
                        {
                            Id = new Guid("0de74aae-183b-4d28-9d23-75d3ee18ff12"),
                            Name = "Reports"
                        },
                        new
                        {
                            Id = new Guid("3f566c8c-ea4a-466f-a50b-6ec7d1301c90"),
                            Name = "Places"
                        },
                        new
                        {
                            Id = new Guid("13de027f-9df3-4772-8580-77bf73a5a338"),
                            Name = "Service"
                        });
                });

            modelBuilder.Entity("FleetHQ.Server.Repository.Models.PermissionModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Access")
                        .HasColumnType("integer");

                    b.Property<Guid>("FeatureId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FeaureId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("FeatureId");

                    b.HasIndex("RoleId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("FleetHQ.Server.Repository.Models.RoleModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("FleetHQ.Server.Repository.Models.UserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OnBoarding")
                        .HasColumnType("integer");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FleetHQ.Server.Repository.Models.PermissionModel", b =>
                {
                    b.HasOne("FleetHQ.Server.Repository.Models.FeatureModel", "Feature")
                        .WithMany()
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FleetHQ.Server.Repository.Models.RoleModel", "Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feature");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("FleetHQ.Server.Repository.Models.UserModel", b =>
                {
                    b.HasOne("FleetHQ.Server.Repository.Models.RoleModel", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("FleetHQ.Server.Repository.Models.RoleModel", b =>
                {
                    b.Navigation("Permissions");
                });
#pragma warning restore 612, 618
        }
    }
}
